<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v0HJLlcAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>